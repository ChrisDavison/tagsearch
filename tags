!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FILTER_AND	bitstring_filter.go	/^	FILTER_AND = iota$/;"	c
FILTER_OR	bitstring_filter.go	/^	FILTER_OR$/;"	c
Len	taglist.go	/^func (t taglistWithCount) Len() int {$/;"	f
Less	taglist.go	/^func (t taglistWithCount) Less(i, j int) bool {$/;"	f
Matches	bitstring_filter.go	/^func (b bitstringFilter) Matches(keywordsForFile []string) bool {$/;"	f
NewBitstringFilter	bitstring_filter.go	/^func NewBitstringFilter(keywords []string, orMode bool) bitstringFilter {$/;"	f
Swap	taglist.go	/^func (t taglistWithCount) Swap(i, j int) {$/;"	f
VERSION	main.go	/^const VERSION = "0.4.0"$/;"	c
bitstringFilter	bitstring_filter.go	/^type bitstringFilter struct {$/;"	t
countedKeyword	main.go	/^type countedKeyword struct {$/;"	t
countedKeywords	main.go	/^type countedKeywords []countedKeyword$/;"	t
fileAndTags	main.go	/^type fileAndTags struct {$/;"	t
getAllTags	main.go	/^func getAllTags(files []string) taglistWithCount {$/;"	f
getFileList	main.go	/^func getFileList() ([]string, error) {$/;"	f
getTagsForFile	main.go	/^func getTagsForFile(filename string) []string {$/;"	f
keywords	main.go	/^	keywords    = kingpin.Arg("keyword", "Keywords to filter (prepend '!' to ignore keyword)").Strings()$/;"	v
list	main.go	/^	list        = kingpin.Flag("list", "List tags").Short('l').Bool()$/;"	v
listTags	main.go	/^func listTags(filesForKeyword map[string][]string, summarise, longList, numericSort bool) {$/;"	f
longList	main.go	/^	longList    = kingpin.Flag("long", "Long (tall) list of tags").Bool()$/;"	v
main	bitstring_filter.go	/^package main$/;"	p
main	main.go	/^func main() {$/;"	f
main	main.go	/^package main$/;"	p
main	taglist.go	/^package main$/;"	p
numericSort	main.go	/^	numericSort = kingpin.Flag("numeric", "When listing, sort by number of tags, and show number").Short('n').Bool()$/;"	v
orFilter	main.go	/^	orFilter    = kingpin.Flag("or-filter", "Filter using ANY tags, rather than ALL").Bool()$/;"	v
summarise	main.go	/^	summarise   = kingpin.Flag("summarise", "List tags and matching files").Short('s').Bool()$/;"	v
tagWithCount	taglist.go	/^type tagWithCount struct {$/;"	t
taglistWithCount	taglist.go	/^type taglistWithCount []tagWithCount$/;"	t
version	main.go	/^	version     = kingpin.Flag("version", "Show version").Bool()$/;"	v
